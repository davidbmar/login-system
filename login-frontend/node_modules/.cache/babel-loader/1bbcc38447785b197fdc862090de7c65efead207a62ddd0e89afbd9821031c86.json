{"ast":null,"code":"var _jsxFileName = \"/Users/davidmar/100-sqstest/audio_client_server/login-frontend/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { setUserSession } from './service/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginAPIUrl = 'https://2noo61wwr8.execute-api.us-east-2.amazonaws.com/staging/login';\nconst Login = props => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const submitHandler = event => {\n    event.preventDefault();\n    if (username.trim() === '' || password.trim() === '') {\n      setErrorMessage('Both username and password are required');\n      return;\n    }\n    setErrorMessage(null);\n\n    // you would likely want to store this in an environment variable so its not checked into code.\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'v9aez83lFu3PZMQrCQRqOaKGhCkxDwOq5pYaLuJy'\n      }\n    };\n    const requestBody = {\n      username: username,\n      password: password\n    };\n    axios.post(loginAPIUrl, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n      props.history.push('/premium-content');\n    }).catch(error => {\n      if (error.response.status == 401 || error.response.status === 403) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('sorry... the backend server is down.  please try again later!!');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), \"username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 113\n      }, this), \"password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 117\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(Login, \"aNpyOThQaKGADrR4NE/Ll/kz+/0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","React","useState","setUserSession","jsxDEV","_jsxDEV","loginAPIUrl","Login","props","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitHandler","event","preventDefault","trim","requestConfig","headers","requestBody","post","then","response","data","user","token","history","push","catch","error","status","message","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","className","_c","$RefreshReg$"],"sources":["/Users/davidmar/100-sqstest/audio_client_server/login-frontend/frontend/src/Login.js"],"sourcesContent":["import axios from 'axios';\nimport React, {useState} from 'react';\nimport {setUserSession} from './service/AuthService'\n\nconst loginAPIUrl ='https://2noo61wwr8.execute-api.us-east-2.amazonaws.com/staging/login';\n\nconst Login = (props) => {\n   const [username,setUsername]=useState('');\n   const [password,setPassword]=useState('');\n   const [errorMessage, setErrorMessage]=useState(null);\n\n   const submitHandler = (event) => {\n      event.preventDefault();\n      if (username.trim() === '' || password.trim() === '') {\n         setErrorMessage('Both username and password are required');\n         return;\n      }\n\n      setErrorMessage(null);\n\n      // you would likely want to store this in an environment variable so its not checked into code.\n      const requestConfig = {\n         headers: {\n           'x-api-key': 'v9aez83lFu3PZMQrCQRqOaKGhCkxDwOq5pYaLuJy'\n         }   \n      }\n      const requestBody = {\n         username: username,\n         password: password\n      }\n      axios.post(loginAPIUrl, requestBody, requestConfig).then((response) => {\n         setUserSession(response.data.user, response.data.token);\n         props.history.push('/premium-content');\n      }).catch((error) => {\n         if (error.response.status == 401 || error.response.status === 403){\n            setErrorMessage(error.response.data.message);\n         }else{\n            setErrorMessage('sorry... the backend server is down.  please try again later!!');\n         }\n      })\n   }\n\n   return (\n      <div>\n         <form onSubmit={submitHandler}>\n            <h5>Login</h5>\n            username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /><br></br>\n            password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /><br></br>\n            <input type=\"submit\" value=\"Login\" />\n         </form> \n         {errorMessage && <p className=\"message\">{errorMessage}</p>}\n      </div>\n   )\n}\n\nexport default Login;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}