{"ast":null,"code":"var _jsxFileName = \"/Users/davidmar/100-sqstest/audio_client_server/login-frontend/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginAPIUrl = 'https://2noo61wwr8.execute-api.us-east-2.amazonaws.com/staging/login';\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const submitHandler = event => {\n    event.preventDefault();\n    if (username.trim() === '' || password.trim() === '') {\n      setErrorMessage('Both username and password are required');\n      return;\n    }\n    setErrorMessage(null);\n\n    // you would likely want to store this in an environment variable so its not checked into code.\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'v9aez83lFu3PZMQrCQRqOaKGhCkxDwOq5pYaLuJy'\n      }\n    };\n    const requestBody = {\n      username: username,\n      password: password\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), \"username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 113\n      }, this), \"password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 117\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_s(Login, \"aNpyOThQaKGADrR4NE/Ll/kz+/0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","loginAPIUrl","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitHandler","event","preventDefault","trim","requestConfig","headers","requestBody","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","className","_c","$RefreshReg$"],"sources":["/Users/davidmar/100-sqstest/audio_client_server/login-frontend/frontend/src/Login.js"],"sourcesContent":["import React, {useState} from 'react';\n\nconst loginAPIUrl ='https://2noo61wwr8.execute-api.us-east-2.amazonaws.com/staging/login';\n\nconst Login = () => {\n   const [username,setUsername]=useState('');\n   const [password,setPassword]=useState('');\n   const [errorMessage, setErrorMessage]=useState(null);\n\n   const submitHandler = (event) => {\n      event.preventDefault();\n      if (username.trim() === '' || password.trim() === '') {\n         setErrorMessage('Both username and password are required');\n         return;\n      }\n\n      setErrorMessage(null);\n\n      // you would likely want to store this in an environment variable so its not checked into code.\n      const requestConfig = {\n         headers: {\n           'x-api-key': 'v9aez83lFu3PZMQrCQRqOaKGhCkxDwOq5pYaLuJy'\n         }   \n      }\n      const requestBody = {\n         username: username,\n         password: password\n      }\n   }\n\n   return (\n      <div>\n         <form onSubmit={submitHandler}>\n            <h5>Login</h5>\n            username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /><br></br>\n            password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /><br></br>\n            <input type=\"submit\" value=\"Login\" />\n         </form> \n         {errorMessage && <p className=\"message\">{errorMessage}</p>}\n      </div>\n   )\n}\n\nexport default Login;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAE,sEAAsE;AAEzF,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACQ,QAAQ,EAACC,WAAW,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMY,aAAa,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIR,QAAQ,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACnDJ,eAAe,CAAC,yCAAyC,CAAC;MAC1D;IACH;IAEAA,eAAe,CAAC,IAAI,CAAC;;IAErB;IACA,MAAMK,aAAa,GAAG;MACnBC,OAAO,EAAE;QACP,WAAW,EAAE;MACf;IACH,CAAC;IACD,MAAMC,WAAW,GAAG;MACjBZ,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACb,CAAC;EACJ,CAAC;EAED,oBACGN,OAAA;IAAAiB,QAAA,gBACGjB,OAAA;MAAMkB,QAAQ,EAAER,aAAc;MAAAO,QAAA,gBAC3BjB,OAAA;QAAAiB,QAAA,EAAI;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,cACJ,eAAAtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEpB,QAAS;QAACqB,QAAQ,EAAEd,KAAK,IAAIN,WAAW,CAACM,KAAK,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,cACnG,eAAAtB,OAAA;QAAOuB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAElB,QAAS;QAACmB,QAAQ,EAAEd,KAAK,IAAIJ,WAAW,CAACI,KAAK,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAtB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjHtB,OAAA;QAAOuB,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACNd,YAAY,iBAAIR,OAAA;MAAG2B,SAAS,EAAC,SAAS;MAAAV,QAAA,EAAET;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEZ,CAAC;AAAAnB,EAAA,CArCKD,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}