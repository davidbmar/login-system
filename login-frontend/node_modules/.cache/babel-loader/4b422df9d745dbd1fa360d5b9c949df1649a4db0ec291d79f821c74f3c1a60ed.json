{"ast":null,"code":"var _jsxFileName = \"/Users/davidmar/100-sqstest/audio_client_server/login-frontend/frontend/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n// so this is defined as a constant but you may want to put this an environment variable.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registerUrl = 'https://2noo61wwr8.execute-api.us-east-2.amazonaws.com/staging/register';\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const submitHandler = event => {\n    event.preventDefault();\n    if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\n      setMessage('All fields are required');\n      return;\n    }\n\n    // you would likely want to store this in an environment variable so its not checked into code.\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'v9aez83lFu3PZMQrCQRqOaKGhCkxDwOq5pYaLuJy'\n      }\n    };\n    const requestBody = {\n      username: username,\n      email: email,\n      name: name,\n      password: password\n    };\n    axios.post(registerUrl, requestBody, requestConfig).then(response => {\n      setMessage('Registration Sucessful');\n    }).catch(error => {\n      if (error.response.status === 401 || error.response.status === 403) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage('Sorry... the backend server is down.  Please try again later.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), \"name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 111\n      }, this), \"email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 116\n      }, this), \"username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        autoComplete: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 151\n      }, this), \"password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        autoComplete: \"new-password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 159\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(Register, \"Vv0mXgSrs9xULoWcTqBeqOy7cnA=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","registerUrl","Register","_s","name","setName","email","setEmail","username","setUsername","password","setPassword","message","setMessage","submitHandler","event","preventDefault","trim","requestConfig","headers","requestBody","post","then","response","catch","error","status","data","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","autoComplete","className","_c","$RefreshReg$"],"sources":["/Users/davidmar/100-sqstest/audio_client_server/login-frontend/frontend/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n// so this is defined as a constant but you may want to put this an environment variable.\nconst registerUrl ='https://2noo61wwr8.execute-api.us-east-2.amazonaws.com/staging/register';\n\nconst Register = () => {\n   const [name, setName] = useState('');\n   const [email, setEmail] = useState('');\n   const [username, setUsername] = useState('');\n   const [password, setPassword] = useState('');\n   const [message, setMessage] = useState(null);\n\n   const submitHandler = (event) => {\n     event.preventDefault(); \n     if (username.trim() === '' || email.trim() === '' || name.trim() === '' || password.trim() === '') {\n       setMessage('All fields are required');\n       return;\n     }\n\n     // you would likely want to store this in an environment variable so its not checked into code.\n     const requestConfig = {\n        headers: {\n           'x-api-key': 'v9aez83lFu3PZMQrCQRqOaKGhCkxDwOq5pYaLuJy'\n        }\n     }\n     const requestBody = {\n        username: username,\n        email: email,\n        name: name,\n        password: password\n     }\n     axios.post(registerUrl,requestBody, requestConfig).then(response => {\n        setMessage('Registration Sucessful');\n     }).catch(error => {\n        if(error.response.status === 401 || error.response.status === 403){\n          setMessage(error.response.data.message);\n        }else{\n          setMessage('Sorry... the backend server is down.  Please try again later.');\n        }\n     })\n   }\n\n   return (\n      <div>\n         <form onSubmit={submitHandler}>\n            <h5>Register</h5>\n            name:<input type=\"text\" name=\"name\" value={name} onChange={event => setName(event.target.value)}/><br/>\n            email:<input type=\"email\" name=\"email\" value={email} onChange={event => setEmail(event.target.value)}/><br/>\n            username:<input type=\"text\" name=\"username\" autoComplete=\"username\" value={username} onChange={event => setUsername(event.target.value)}/><br/>\n            password:<input type=\"password\" name=\"password\" autoComplete=\"new-password\" value={password} onChange={event => setPassword(event.target.value)}/><br/>\n            <input type=\"submit\" value=\"Register\" />\n         </form>\n         {message && <p className=\"message\">{message}</p>}\n      </div>\n   )\n}\n\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAE,yEAAyE;AAE5F,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMiB,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIR,QAAQ,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIX,KAAK,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIb,IAAI,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACjGJ,UAAU,CAAC,yBAAyB,CAAC;MACrC;IACF;;IAEA;IACA,MAAMK,aAAa,GAAG;MACnBC,OAAO,EAAE;QACN,WAAW,EAAE;MAChB;IACH,CAAC;IACD,MAAMC,WAAW,GAAG;MACjBZ,QAAQ,EAAEA,QAAQ;MAClBF,KAAK,EAAEA,KAAK;MACZF,IAAI,EAAEA,IAAI;MACVM,QAAQ,EAAEA;IACb,CAAC;IACDZ,KAAK,CAACuB,IAAI,CAACpB,WAAW,EAACmB,WAAW,EAAEF,aAAa,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAI;MACjEV,UAAU,CAAC,wBAAwB,CAAC;IACvC,CAAC,CAAC,CAACW,KAAK,CAACC,KAAK,IAAI;MACf,IAAGA,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAID,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAC;QAChEb,UAAU,CAACY,KAAK,CAACF,QAAQ,CAACI,IAAI,CAACf,OAAO,CAAC;MACzC,CAAC,MAAI;QACHC,UAAU,CAAC,+DAA+D,CAAC;MAC7E;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACGb,OAAA;IAAA4B,QAAA,gBACG5B,OAAA;MAAM6B,QAAQ,EAAEf,aAAc;MAAAc,QAAA,gBAC3B5B,OAAA;QAAA4B,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,SACZ,eAAAjC,OAAA;QAAOkC,IAAI,EAAC,MAAM;QAAC9B,IAAI,EAAC,MAAM;QAAC+B,KAAK,EAAE/B,IAAK;QAACgC,QAAQ,EAAErB,KAAK,IAAIV,OAAO,CAACU,KAAK,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAAAjC,OAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,UACjG,eAAAjC,OAAA;QAAOkC,IAAI,EAAC,OAAO;QAAC9B,IAAI,EAAC,OAAO;QAAC+B,KAAK,EAAE7B,KAAM;QAAC8B,QAAQ,EAAErB,KAAK,IAAIR,QAAQ,CAACQ,KAAK,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAAAjC,OAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,aACnG,eAAAjC,OAAA;QAAOkC,IAAI,EAAC,MAAM;QAAC9B,IAAI,EAAC,UAAU;QAACkC,YAAY,EAAC,UAAU;QAACH,KAAK,EAAE3B,QAAS;QAAC4B,QAAQ,EAAErB,KAAK,IAAIN,WAAW,CAACM,KAAK,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAAAjC,OAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,aACtI,eAAAjC,OAAA;QAAOkC,IAAI,EAAC,UAAU;QAAC9B,IAAI,EAAC,UAAU;QAACkC,YAAY,EAAC,cAAc;QAACH,KAAK,EAAEzB,QAAS;QAAC0B,QAAQ,EAAErB,KAAK,IAAIJ,WAAW,CAACI,KAAK,CAACsB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAAAjC,OAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvJjC,OAAA;QAAOkC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACNrB,OAAO,iBAAIZ,OAAA;MAAGuC,SAAS,EAAC,SAAS;MAAAX,QAAA,EAAEhB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEZ,CAAC;AAAA9B,EAAA,CAlDKD,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}